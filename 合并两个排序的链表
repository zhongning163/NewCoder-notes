输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。

/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Solution {
    public ListNode Merge(ListNode list1,ListNode list2) {
        ListNode head = new ListNode(-1);   //新建一个头结点，用来存放合并的链表
        head.next = null;
        ListNode root = head;
        while(list1!=null&&list2!=null)
        {
            if(list1.val<list2.val)     //通过这个if-else可以将list1和lsit2按单调不减的顺序连接成链表
            {
                head.next = list1;
                head = list1;
                list1 = list1.next;
            }
            else
            {
                head.next = list2;
                head = list2;
                list2 = list2.next;
            }
        }
        //把未结束的链表连接到合并后的链表尾部
        if(list1==null)
        {
            head.next = list2;
        }
        if(list2==null)
        {
            head.next = list1;
        }
        return root.next;
    }
}
